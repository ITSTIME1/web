body {
    font-family: sans-serif;
    text-align: center;
    /* rm, em 은 반응형 웹 디자인을 하기 위해서 사용되는 단위인데 
    이런 종류는 상대단위와 절대단위로 나뉘어진다
    상대단위 : 고정되지 않고 어떤 기준에 따라서 유동적으로 변하는 길이를 말하는 것이고
    절대단위 : 어떤 상황에서든 항상 고정된 길이를 나타내는 단위이다

    상대단위(relative) 범위는 em, rem %, vw, vh
    절대단위(absolute) 범위는 px, pt, cm, in 과 같은 실생활에서 많이 사용되는
    단위를 일컷는다

    < 조금더 풀어보자면 >
    실생활에서 1cm 가 항상 1cm를 가르키고 10cm 가 10cm를 가르키는 것처럼
    1px 는 항상 1px(0.02645833cm)를 나타내고 즉 이 값들은 유동적이지 않으면서도
    절대단위의 속한다고 볼 수 있다

    반면 1em, 1rem 은 항상 고정된 길이를 나타나지 않고 브라우저의 기준에 따라서
    계산을 하여 px로 변환을 해줍니다.   
    
    em, rem은 둘다 CCS의 font-size 속성 값에 비례해서 결정되는 상대단위입니다.
    계산식은 px * em = px*em 으로 상대적으로 계산되어 진다
    
    즉 0.5em = 16px * 0.5 = 8px
    1em = 16px * 1 = 16px
    이 처럼 em은 font-size의 값의 따라 달라지는 상대단위의 속한다
    
    만약 font-size를 증가 시킨다면 상대 단위도 또 한 증가하게 된다

    한마디로 다시 정리해보자면, font-size의 증감에 비례해서 유동적으로 길이가 결정되고 싶은 속성에 em 이나
    rem 단위를 사용해서 길이 지정을 해줄 수 있습니다.

    < 그럼 em 과 rem의 차이점은? >
    em은 해당 속성 값 즉 div면 div 선택자면 선택자 클래스 값이면 클래스 속성값의
    font-size의 따라서 증감이 계산되지만

    rem은 해당 속성 값의 font-size의 값은 전혀 중요하지 않게 됩니다
    즉 "단일 속성" font-size의 값은 중요하지 않고 root 요소의 즉 최상위 요소의 font-size의 영향을 받게 됩니다
    
    이것이 em, rem 의 차이점이라고 할 수 있다.

    < 공통점 이라고 한다면? >
    상대단위라는 공통분모 덕분에 유동적으로 길이가 조정이 가능하다는 공통점이 존재한다

    */
    padding: 3rem;
    font-size: 1.125rem;


    /* Text Line 사이를 지정 할때 보통 사용되어지게 되는 속성값이다. 
    
    예를 들어 The program is good
            shampoo is nice product
    위 두 문장을 살펴봤을 때 text간의 간격을 늘리기 위해서 사용하는 속성 값이 line-height라고 보면 된다

    
    */

	line-height: 1.3;

    /* Transition 속성일 경우 animation speed 를 control 하는데 속성 값이 사용되어진다.
    
    usually the change is instantaneous(동시에 일어나는)
    initail state -> final state 가운데 transition이 일어나게 된다
    */
	transition: all 725ms ease-in-out;
}

h1 {
    font-size: 2rem;
    font-weight: bolder;
    margin-bottom: 1rem;
}

p {
    margin-bottom: 1rem;
    color: tomato;
}

button {
    /*cursor 모양을 바꿔주고*/
	cursor: pointer;
    /* appearance 속성은 운영체제 및 브라우저에 기본적으로 설정 되어 있는 테마를 기반으로 요소를 표현한다
    즉 네이티브로 지원되는 모양들을 해제하거나 추가할때 이 속성을 사용할 수 있다.

    다시 말해, os시스템에서 기본적으로 지원되는 테마를 기반으로 두고 있는 스타일들을 해제할 때 사용한다고 보면 된다.

    */
	appearance: none;
	border-radius: 4px;
	font-size: 1.25rem;
	padding: 0.75rem 1rem;
	border: 3px solid navy;
	background-color: dodgerblue;
	color: white;
}